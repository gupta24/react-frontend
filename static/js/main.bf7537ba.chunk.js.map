{"version":3,"sources":["Popup.js","Cards.js","App.js","reportWebVitals.js","index.js"],"names":["Popup","hover","close","usrEle","className","style","transform","opacity","onClick","src","thumbnail","small","alt","title","content","author","avatar","name","role","Cards","props","dataList","users","useState","setHover","getPopup","closeHandler","map","ind","App","user","setState","getState","a","fetch","response","json","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAEMA,EAAQ,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,MAAQC,EAAY,EAAZA,OAG3B,OACI,sBAAKC,UAAU,uBACZC,MAAO,CACHC,UAAWL,EAAQ,kBAAoB,qBACvCM,QAASN,EAAQ,IAAM,KAH9B,UAMI,qBAAKG,UAAU,WAAWI,QAASN,EAAnC,kBACA,qBAAKE,UAAU,iBAAf,SACI,qBAAKK,IAAKN,EAAOO,UAAUC,MAAQC,IAAI,sBAE3C,sBAAKR,UAAU,kBAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,6BAAKD,EAAOU,UAEhB,qBAAKT,UAAU,kBAAf,SACI,4BAAID,EAAOW,YAEf,sBAAKV,UAAU,oBAAf,UACI,qBAAKK,IAAKN,EAAOY,OAAOC,OAAQJ,IAAI,wBACpC,8BAAIT,EAAOY,OAAOE,KAAlB,IAAyB,IAAzB,IAA+Bd,EAAOY,OAAOG,kBCyDlDC,MA9Ef,SAAeC,GAEX,IAAMC,EAAWD,EAAME,MAEvB,EAA2BC,oBAAS,GAApC,mBAAOtB,EAAP,KAAeuB,EAAf,KAEMC,EAAW,WACbD,GAAS,IAGPE,EAAe,WAAQF,GAAS,IAGtC,OACI,qBAAKpB,UAAU,iBAAf,SAEIiB,EAASM,KAAI,SAACxB,EAAQyB,GAElB,OAAW,IAARA,EAEK,sBAAKxB,UAAU,iBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKK,IAAKN,EAAOO,UAAUC,MAAOP,UAAU,OAAOQ,IAAI,KACvD,wBAAQJ,QAASiB,EAAjB,2BAEJ,qBAAKrB,UAAU,QAAf,SAEMH,EAAQ,cAAC,EAAD,CAAOA,MAAOA,EAAOC,MAAOwB,EAAcvB,OAAQA,IAAY,OAG5E,sBAAKC,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKD,EAAOU,UAEhB,qBAAKT,UAAU,YAAf,SACI,4BAAID,EAAOW,YAEf,qBAAKV,UAAU,cAAf,SACI,8BAAID,EAAOY,OAAOE,KAAlB,IAAyB,IAAzB,IAA+Bd,EAAOY,OAAOG,UAEjD,qBAAKd,UAAU,OAAf,SACI,oDArByBwB,GA8BzC,sBAAKxB,UAAU,iBAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKK,IAAKN,EAAOO,UAAUC,MAAQC,IAAI,OAE3C,sBAAKR,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKD,EAAOU,UAEhB,qBAAKT,UAAU,YAAf,SACI,4BAAID,EAAOW,YAEf,qBAAKV,UAAU,cAAf,SACI,8BAAID,EAAOY,OAAOE,KAAlB,IAAyB,IAAzB,IAA+Bd,EAAOY,OAAOG,UAEjD,qBAAKd,UAAU,OAAf,SACI,oDAfyBwB,SC5B1CC,MArBf,WAEE,MAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAEMC,EAAQ,uCAAG,4BAAAC,EAAA,sEACSC,MAAM,+EADf,cACRC,EADQ,YAEdJ,EAFc,SAECI,EAASC,OAFV,6EAAH,qDAUd,OALAC,qBAAU,WACPL,MACA,IAID,qBAAK5B,UAAU,MAAf,SACE,cAAC,EAAD,CAAOkB,MAAOQ,OCTLQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bf7537ba.chunk.js","sourcesContent":["import './Popup.css';\r\n\r\nconst Popup = ({hover, close , usrEle}) => {\r\n\r\n    //console.log(hover);\r\n    return (\r\n        <div className=\"popup-card-container\"\r\n           style={{\r\n               transform: hover ? 'translateX(0vh)' : 'translateX(-100vh)',\r\n               opacity: hover ? '1' : '0'\r\n           }}\r\n        >\r\n            <div className=\"closeBtn\" onClick={close}>&times;</div>\r\n            <div className=\"popup-card-img\">\r\n                <img src={usrEle.thumbnail.small}  alt='thumbnail image' />\r\n            </div>\r\n            <div className=\"popup-card-text\">\r\n                <div className=\"popup-card-title\">\r\n                    <h1>{usrEle.title}</h1>\r\n                </div>\r\n                <div className=\"popup-card-body\">\r\n                    <p>{usrEle.content}</p>\r\n                </div>\r\n                <div className=\"popup-author-name\">\r\n                    <img src={usrEle.author.avatar} alt='author avatar image' />\r\n                    <p>{usrEle.author.name} {'-'} {usrEle.author.role}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n            \r\n};\r\n\r\nexport { Popup }","import React , { useState } from 'react';\r\nimport './Cards.css';\r\nimport { Popup } from './Popup';\r\n\r\nfunction Cards(props) {\r\n\r\n    const dataList = props.users;\r\n\r\n    const [hover , setHover] = useState(false);\r\n\r\n    const getPopup = () => {\r\n        setHover(true);\r\n    }\r\n\r\n    const closeHandler = () => { setHover(false); }\r\n\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n        {  \r\n            dataList.map((usrEle, ind) => {\r\n\r\n                if(ind === 3){\r\n                    return( \r\n                        <div className=\"card-container\" key={ind}>\r\n                            <div className=\"card-img\"> \r\n                                <img src={usrEle.thumbnail.small} className=\"imgL\" alt='' /> \r\n                                <button onClick={getPopup}>Learn More</button>\r\n                            </div>\r\n                            <div className=\"popup\">\r\n                                {  \r\n                                  hover ? <Popup hover={hover} close={closeHandler} usrEle={usrEle}/> : null\r\n                                }\r\n                            </div>\r\n                            <div className=\"card-text\">\r\n                                <div className=\"card-title\">\r\n                                    <h1>{usrEle.title}</h1>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <p>{usrEle.content}</p>\r\n                                </div>\r\n                                <div className=\"author-name\">\r\n                                    <p>{usrEle.author.name} {'-'} {usrEle.author.role}</p>\r\n                                </div>\r\n                                <div className=\"date\">\r\n                                    <p>Nov 25, 2020</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    );\r\n                }\r\n\r\n                return(\r\n                    <div className=\"card-container\" key={ind}>\r\n                        <div className=\"card-img\">\r\n                            <img src={usrEle.thumbnail.small}  alt='' />\r\n                        </div>\r\n                        <div className=\"card-text\">\r\n                            <div className=\"card-title\">\r\n                                <h1>{usrEle.title}</h1>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <p>{usrEle.content}</p>\r\n                            </div>\r\n                            <div className=\"author-name\">\r\n                                <p>{usrEle.author.name} {'-'} {usrEle.author.role}</p>\r\n                            </div>\r\n                            <div className=\"date\">\r\n                                <p>Nov 25, 2020</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                );\r\n            })\r\n        }\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Cards;","import React  from 'react';\nimport './App.css';\nimport Cards from './Cards';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n\n  const [user , setState] = useState([]);\n\n  const getState = async () => {\n     const response = await fetch('https://my-json-server.typicode.com/Codeinwp/front-end-internship-api/posts');\n     setState(await response.json());\n  }\n\n  useEffect(() => {\n     getState();\n  }, []);\n\n\n  return (\n    <div className=\"App\">\n      <Cards users={user}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}